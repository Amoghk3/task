{"ast":null,"code":"var _jsxFileName = \"D:\\\\NewProj\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TaskList from \"./TaskList\";\nimport TaskForm from \"./TaskForm\";\nimport { fetchTasks } from \"./api\"; // Make sure to import fetchTasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n\n  // Function to load tasks from the API\n  const loadTasks = async () => {\n    try {\n      const fetchedTasks = await fetchTasks();\n      setTasks(fetchedTasks);\n    } catch (error) {\n      console.error(\"Failed to fetch tasks:\", error);\n    }\n  };\n\n  // Load tasks on component mount\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  // Function to refresh tasks after create/update\n  const refreshTasks = () => {\n    loadTasks();\n    setCurrentTask(null); // Reset currentTask after submitting\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"0 auto\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      currentTask: currentTask,\n      onSubmit: refreshTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onEdit: setCurrentTask,\n      refreshTasks: refreshTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eUvsHR1bWshzapwuP21TEU32xKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","TaskForm","fetchTasks","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","currentTask","setCurrentTask","loadTasks","fetchedTasks","error","console","refreshTasks","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onEdit","_c","$RefreshReg$"],"sources":["D:/NewProj/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport { fetchTasks } from \"./api\"; // Make sure to import fetchTasks\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n\r\n  // Function to load tasks from the API\r\n  const loadTasks = async () => {\r\n    try {\r\n      const fetchedTasks = await fetchTasks();\r\n      setTasks(fetchedTasks);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch tasks:\", error);\r\n    }\r\n  };\r\n\r\n  // Load tasks on component mount\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, []);\r\n\r\n  // Function to refresh tasks after create/update\r\n  const refreshTasks = () => {\r\n    loadTasks();\r\n    setCurrentTask(null); // Reset currentTask after submitting\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: \"20px\" }}>\r\n      <h1>Task Manager</h1>\r\n      <TaskForm currentTask={currentTask} onSubmit={refreshTasks} />\r\n      <TaskList tasks={tasks} onEdit={setCurrentTask} refreshTasks={refreshTasks} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,UAAU,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMV,UAAU,CAAC,CAAC;MACvCM,QAAQ,CAACI,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzBJ,SAAS,CAAC,CAAC;IACXD,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA;IAAKY,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnEhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA,CAACH,QAAQ;MAACQ,WAAW,EAAEA,WAAY;MAACgB,QAAQ,EAAEV;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DpB,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACmB,MAAM,EAAEhB,cAAe;MAACK,YAAY,EAAEA;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}