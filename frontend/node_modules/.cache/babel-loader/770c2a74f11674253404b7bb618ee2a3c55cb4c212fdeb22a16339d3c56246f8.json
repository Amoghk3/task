{"ast":null,"code":"const API_URL = 'http://localhost:8000';\nexport const createTask = async task => {\n  const response = await fetch(`${API_URL}/tasks`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return await response.json();\n};\nexport const getTasks = async () => {\n  const response = await fetch(`${API_URL}/tasks`);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return await response.json();\n};\nexport const updateTask = async (id, task) => {\n  const response = await fetch(`${API_URL}/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return await response.json();\n};\nexport const deleteTask = async id => {\n  const response = await fetch(`${API_URL}/tasks/${id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return await response.json();\n};","map":{"version":3,"names":["API_URL","createTask","task","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","getTasks","updateTask","id","deleteTask"],"sources":["D:/NewProj/frontend/src/api.js"],"sourcesContent":["\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nexport const createTask = async (task) => {\r\n  const response = await fetch(`${API_URL}/tasks`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(task),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getTasks = async () => {\r\n  const response = await fetch(`${API_URL}/tasks`);\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\nexport const updateTask = async (id, task) => {\r\n  const response = await fetch(`${API_URL}/tasks/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(task),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const deleteTask = async (id) => {\r\n  const response = await fetch(`${API_URL}/tasks/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n"],"mappings":"AACA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,EAAE;IAC/CK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,CAAC;EAChD,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEb,IAAI,KAAK;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,UAAUe,EAAE,EAAE,EAAE;IACrDV,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAOD,EAAE,IAAK;EACtC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,UAAUe,EAAE,EAAE,EAAE;IACrDV,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}