{"ast":null,"code":"var _jsxFileName = \"D:\\\\NewProj\\\\frontend\\\\src\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport { createTask } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const [task, setTask] = useState({\n    title: '',\n    description: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await createTask(task);\n    setTask({\n      title: '',\n      description: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Task Title\",\n        variant: \"outlined\",\n        value: task.title,\n        onChange: e => setTask({\n          ...task,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Task Description\",\n        variant: \"outlined\",\n        multiline: true,\n        rows: 4,\n        value: task.description,\n        onChange: e => setTask({\n          ...task,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"sDB/QUgUn4TaK7WgHTLoOXVnU3E=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","createTask","jsxDEV","_jsxDEV","TaskForm","_s","task","setTask","title","description","handleSubmit","e","preventDefault","onSubmit","children","sx","display","flexDirection","gap","label","variant","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","multiline","rows","type","color","_c","$RefreshReg$"],"sources":["D:/NewProj/frontend/src/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Box } from '@mui/material';\r\nimport { createTask } from './api';\r\n\r\nconst TaskForm = () => {\r\n  const [task, setTask] = useState({ title: '', description: '' });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await createTask(task);\r\n    setTask({ title: '', description: '' });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n        <TextField\r\n          label=\"Task Title\"\r\n          variant=\"outlined\"\r\n          value={task.title}\r\n          onChange={(e) => setTask({ ...task, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          label=\"Task Description\"\r\n          variant=\"outlined\"\r\n          multiline\r\n          rows={4}\r\n          value={task.description}\r\n          onChange={(e) => setTask({ ...task, description: e.target.value })}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Add Task\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AACtD,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAEhE,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMX,UAAU,CAACK,IAAI,CAAC;IACtBC,OAAO,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAG,CAAC,CAAC;EACzC,CAAC;EAED,oBACEN,OAAA;IAAMU,QAAQ,EAAEH,YAAa;IAAAI,QAAA,eAC3BX,OAAA,CAACH,GAAG;MAACe,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAE,CAAE;MAAAJ,QAAA,gBAC5DX,OAAA,CAACL,SAAS;QACRqB,KAAK,EAAC,YAAY;QAClBC,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAEf,IAAI,CAACE,KAAM;QAClBc,QAAQ,EAAGX,CAAC,IAAKJ,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEE,KAAK,EAAEG,CAAC,CAACY,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACFxB,OAAA,CAACL,SAAS;QACRqB,KAAK,EAAC,kBAAkB;QACxBC,OAAO,EAAC,UAAU;QAClBQ,SAAS;QACTC,IAAI,EAAE,CAAE;QACRR,KAAK,EAAEf,IAAI,CAACG,WAAY;QACxBa,QAAQ,EAAGX,CAAC,IAAKJ,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEG,WAAW,EAAEE,CAAC,CAACY,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC,eACFxB,OAAA,CAACJ,MAAM;QAAC+B,IAAI,EAAC,QAAQ;QAACV,OAAO,EAAC,WAAW;QAACW,KAAK,EAAC,SAAS;QAAAjB,QAAA,EAAC;MAE1D;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACtB,EAAA,CAhCID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}