{"ast":null,"code":"var _jsxFileName = \"D:\\\\NewProj\\\\frontend\\\\src\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { createTask, updateTask } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  currentTask,\n  onSubmit\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    if (currentTask) {\n      setTitle(currentTask.title);\n      setDescription(currentTask.description);\n    }\n  }, [currentTask]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const taskData = {\n      title,\n      description\n    };\n    try {\n      if (currentTask) {\n        await updateTask(currentTask.id, taskData);\n      } else {\n        await createTask(taskData);\n      }\n      setTitle(\"\");\n      setDescription(\"\");\n      onSubmit(); // Callback to refresh tasks\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Task Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Task Description\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"EA2MnaeBy++r0GzgDN7+Z9SdR0w=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","createTask","updateTask","jsxDEV","_jsxDEV","TaskForm","currentTask","onSubmit","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","taskData","id","error","console","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/NewProj/frontend/src/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { createTask, updateTask } from \"./api\";\r\n\r\nconst TaskForm = ({ currentTask, onSubmit }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (currentTask) {\r\n      setTitle(currentTask.title);\r\n      setDescription(currentTask.description);\r\n    }\r\n  }, [currentTask]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const taskData = { title, description };\r\n\r\n    try {\r\n      if (currentTask) {\r\n        await updateTask(currentTask.id, taskData);\r\n      } else {\r\n        await createTask(taskData);\r\n      }\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      onSubmit(); // Callback to refresh tasks\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Task Title\"\r\n        required\r\n      />\r\n      <textarea\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        placeholder=\"Task Description\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIM,WAAW,EAAE;MACfI,QAAQ,CAACJ,WAAW,CAACG,KAAK,CAAC;MAC3BG,cAAc,CAACN,WAAW,CAACK,WAAW,CAAC;IACzC;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG;MAAEP,KAAK;MAAEE;IAAY,CAAC;IAEvC,IAAI;MACF,IAAIL,WAAW,EAAE;QACf,MAAMJ,UAAU,CAACI,WAAW,CAACW,EAAE,EAAED,QAAQ,CAAC;MAC5C,CAAC,MAAM;QACL,MAAMf,UAAU,CAACe,QAAQ,CAAC;MAC5B;MACAN,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;MAClBL,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEd,OAAA;IAAMG,QAAQ,EAAEM,YAAa;IAAAO,QAAA,gBAC3BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,KAAM;MACbc,QAAQ,EAAGT,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC,YAAY;MACxBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF1B,OAAA;MACEkB,KAAK,EAAEX,WAAY;MACnBY,QAAQ,EAAGT,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAChDG,WAAW,EAAC,kBAAkB;MAC9BC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF1B,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACtB,EAAA,CA/CIH,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}